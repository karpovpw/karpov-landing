/* Liquid Glass Design System - Foundational Definitions */
/* This file contains the core glassmorphism effect definitions and utilities */

@import './globals.css';

/* Advanced Glassmorphism Effects */
.glass-shimmer {
  position: relative;
  overflow: hidden;
}

.glass-shimmer::before {
  content: '';
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: linear-gradient(
    45deg,
    transparent 40%,
    rgba(var(--glass-secondary), calc(var(--glass-background-opacity) * 0.3)) 50%,
    transparent 60%
  );
  animation: shimmer 3s ease-in-out infinite;
  pointer-events: none;
}

@keyframes shimmer {
  0%, 100% { transform: translateX(-100%) translateY(-100%) rotate(45deg); }
  50% { transform: translateX(100%) translateY(100%) rotate(45deg); }
}

.glass-border-glow {
  position: relative;
  border: 1px solid rgba(var(--glass-border), var(--glass-border-opacity));
}

.glass-border-glow::before {
  content: '';
  position: absolute;
  inset: -1px;
  background: linear-gradient(
    45deg,
    rgba(var(--glass-primary), 0.3),
    rgba(var(--glass-accent), 0.3),
    rgba(var(--glass-accent-secondary), 0.3)
  );
  border-radius: inherit;
  z-index: -1;
  opacity: 0;
  transition: opacity 0.3s ease;
}

.glass-border-glow:hover::before {
  opacity: 1;
}

/* Responsive Glassmorphism Utilities */
@media (max-width: 768px) {
  .glass-mobile-subtle {
    --glass-background-opacity: calc(var(--glass-background-opacity) - 0.03);
    --glass-border-opacity: calc(var(--glass-border-opacity) - 0.05);
    --glass-blur: calc(var(--glass-blur) - 2px);
  }

  .glass-mobile-enhanced {
    --glass-background-opacity: calc(var(--glass-background-opacity) + 0.05);
    --glass-border-opacity: calc(var(--glass-border-opacity) + 0.05);
    --glass-blur: calc(var(--glass-blur) + 2px);
  }
}

@media (prefers-reduced-motion: reduce) {
  .glass-shimmer::before {
    animation: none;
  }

  .glass-border-glow::before {
    transition: none;
  }
}

/* Glassmorphism Interactive States */
.glass-interactive {
  transition: all 0.2s ease;
}

.glass-interactive:hover {
  --glass-background-opacity: calc(var(--glass-background-opacity) + 0.05);
  transform: translateY(-2px);
}

.glass-interactive:active {
  transform: translateY(0);
  --glass-blur: calc(var(--glass-blur) + 4px);
}

/* Utility Classes for Common Glassmorphism Patterns */
.glass-nav {
  background: rgba(var(--glass-background), calc(var(--glass-background-opacity) + 0.02));
  backdrop-filter: blur(calc(var(--glass-blur) + 6px));
  border-bottom: 1px solid rgba(var(--glass-border), calc(var(--glass-border-opacity) + 0.05));
}

.glass-hero {
  background: rgba(var(--glass-background), calc(var(--glass-background-opacity) - 0.02));
  backdrop-filter: blur(calc(var(--glass-blur) - 2px));
  border: 1px solid rgba(var(--glass-border), calc(var(--glass-border-opacity) - 0.05));
}

.glass-content {
  background: rgba(var(--glass-background), var(--glass-background-opacity));
  backdrop-filter: var(--glass-blur);
  border: 1px solid rgba(var(--glass-border), var(--glass-border-opacity));
}

/* Dark Theme Optimizations */
.dark .glass-enhanced-dark {
  --glass-background-opacity: calc(var(--glass-background-opacity) + 0.08);
  --glass-border-opacity: calc(var(--glass-border-opacity) + 0.08);
  box-shadow:
    0 4px 16px rgba(var(--glass-shadow-color), calc(var(--glass-shadow-opacity) + 0.1)),
    inset 0 1px 0 rgba(var(--glass-secondary), 0.1);
}

/* Accessibility Support */
@media (prefers-contrast: high) {
  .glass-high-contrast {
    --glass-background-opacity: calc(var(--glass-background-opacity) + 0.15);
    --glass-border-opacity: calc(var(--glass-border-opacity) + 0.2);
  }
}

/* Print Styles */
@media print {
  .glass {
    background: none !important;
    backdrop-filter: none !important;
    border: 1px solid #000 !important;
    box-shadow: none !important;
  }
}